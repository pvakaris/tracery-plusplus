grammar tracerypp.TraceryPlusPlus with org.eclipse.xtext.common.Terminals

generate traceryPlusPlus "http://www.TraceryPlusPlus.tracerypp"

// Version 1.0

Model:
	statements += Statement*
	story = Story
;
	
Statement:
	Declaration
	// Rule (for example if else or something similar)
;

Declaration:
	ListDeclaration |
	ObjectDeclaration
;

/*
	Used to define what the story should look like.
	There must be only one story in the model for now.
 */
Story:
	{Story} "The" "story:"
	story += ( Word | StoryVariable | ObjectAttribute )*
;

/*
	Define a variable and give that variable a list of values it can take.
	Examples of use:
		colors can have values: green, blue, orange
		fruit can be: banana or apple or pear
 */
ListDeclaration:
	name = Variable  ("can" "have" "values" | "can" "be") AssignmentOperator list = WordList
;

/*
	Define an object that has attributes. If the attribute value is not specified, the attribute name
	must be the same as one of the lists. The value will be selected randomly.
	Examples of use:
		hero is an object.
		It has attributes: name = "John", occupation
 */
ObjectDeclaration:
	"There" ("is" | "are") ("a" | "an")? name = ID
	("He" | "She" | "It" | "They") ("has" | "have") "attributes" AssignmentOperator attributes = AttributeList
;

/*
	Basic building blocks
 */

Word:
	value = STRING
;

Variable:
	name = ID
;

StoryVariable:
	variable = [Variable]
	modifiers += Modifier*
;

Attribute:
	name = ExistingVariable |
	name = Variable AssignmentOperator value = STRING
;

ExistingVariable:
    pointer = [Variable]
;

ObjectAttribute:
	object = [ObjectDeclaration] "." attribute = [Variable]
	modifiers += Modifier*
;

WordList:
	words += Word (SeparatorOr words += Word)*
;

AttributeList:
	attributes += Attribute ( SeparatorAnd attributes += Attribute)*
;

/*
	Modifiers
 */

Modifier:
	CapitalizationModifier |
	FullCapitalizationModifier |
	PluralityModifier |
	ArticleModifier |
	PastTenseModifier
;

CapitalizationModifier:
	".capitalize"
;

FullCapitalizationModifier:
	".CAPITALIZE"
;

PluralityModifier:
	".s"
;

ArticleModifier:
	".a"
;

PastTenseModifier:
	".ed"
;

/*
	Helpers
 */
 
AssignmentOperator:
	"=" | ":" | "-"
;

SeparatorOr:
	"," | "or"
;

SeparatorAnd:
	',' | "and"
;