/*
 * generated by Xtext 2.29.0
 */
package uk.ac.kcl.inf.mdd.tracerypp.scoping

import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider
import org.eclipse.xtext.scoping.IScope
import uk.ac.kcl.inf.mdd.tracerypp.traceryPP.ObjectAttribute
import org.eclipse.emf.ecore.EReference
import static org.eclipse.xtext.scoping.Scopes.*

//import static extension org.eclipse.xtext.EcoreUtil2.*
//import uk.ac.kcl.inf.mdd.tracerypp.traceryPP.Story
//import uk.ac.kcl.inf.mdd.tracerypp.traceryPP.Model
//import org.eclipse.emf.ecore.EObject

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class TraceryPPScopeProvider extends AbstractDeclarativeScopeProvider {
	
	def IScope scope_ObjectAttribute_attribute(ObjectAttribute context, EReference ref) {
        val objectDeclaration = context.object
        if (objectDeclaration !== null) {
            scopeFor(objectDeclaration.attributes.attributes)
        } else {
            IScope.NULLSCOPE
        }
    }
}
