/**
 * generated by Xtext 2.29.0
 */
package uk.ac.kcl.inf.mdd.tracerypp.traceryPP.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import uk.ac.kcl.inf.mdd.tracerypp.traceryPP.List;
import uk.ac.kcl.inf.mdd.tracerypp.traceryPP.StartSymbol;
import uk.ac.kcl.inf.mdd.tracerypp.traceryPP.Title;
import uk.ac.kcl.inf.mdd.tracerypp.traceryPP.TraceryPPPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Title</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.inf.mdd.tracerypp.traceryPP.impl.TitleImpl#getStart_symbol <em>Start symbol</em>}</li>
 *   <li>{@link uk.ac.kcl.inf.mdd.tracerypp.traceryPP.impl.TitleImpl#getList <em>List</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TitleImpl extends StatementImpl implements Title
{
  /**
   * The cached value of the '{@link #getStart_symbol() <em>Start symbol</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStart_symbol()
   * @generated
   * @ordered
   */
  protected StartSymbol start_symbol;

  /**
   * The cached value of the '{@link #getList() <em>List</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getList()
   * @generated
   * @ordered
   */
  protected List list;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TitleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TraceryPPPackage.Literals.TITLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StartSymbol getStart_symbol()
  {
    return start_symbol;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStart_symbol(StartSymbol newStart_symbol, NotificationChain msgs)
  {
    StartSymbol oldStart_symbol = start_symbol;
    start_symbol = newStart_symbol;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TraceryPPPackage.TITLE__START_SYMBOL, oldStart_symbol, newStart_symbol);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStart_symbol(StartSymbol newStart_symbol)
  {
    if (newStart_symbol != start_symbol)
    {
      NotificationChain msgs = null;
      if (start_symbol != null)
        msgs = ((InternalEObject)start_symbol).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TraceryPPPackage.TITLE__START_SYMBOL, null, msgs);
      if (newStart_symbol != null)
        msgs = ((InternalEObject)newStart_symbol).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TraceryPPPackage.TITLE__START_SYMBOL, null, msgs);
      msgs = basicSetStart_symbol(newStart_symbol, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TraceryPPPackage.TITLE__START_SYMBOL, newStart_symbol, newStart_symbol));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public List getList()
  {
    return list;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetList(List newList, NotificationChain msgs)
  {
    List oldList = list;
    list = newList;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TraceryPPPackage.TITLE__LIST, oldList, newList);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setList(List newList)
  {
    if (newList != list)
    {
      NotificationChain msgs = null;
      if (list != null)
        msgs = ((InternalEObject)list).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TraceryPPPackage.TITLE__LIST, null, msgs);
      if (newList != null)
        msgs = ((InternalEObject)newList).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TraceryPPPackage.TITLE__LIST, null, msgs);
      msgs = basicSetList(newList, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TraceryPPPackage.TITLE__LIST, newList, newList));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TraceryPPPackage.TITLE__START_SYMBOL:
        return basicSetStart_symbol(null, msgs);
      case TraceryPPPackage.TITLE__LIST:
        return basicSetList(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TraceryPPPackage.TITLE__START_SYMBOL:
        return getStart_symbol();
      case TraceryPPPackage.TITLE__LIST:
        return getList();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TraceryPPPackage.TITLE__START_SYMBOL:
        setStart_symbol((StartSymbol)newValue);
        return;
      case TraceryPPPackage.TITLE__LIST:
        setList((List)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TraceryPPPackage.TITLE__START_SYMBOL:
        setStart_symbol((StartSymbol)null);
        return;
      case TraceryPPPackage.TITLE__LIST:
        setList((List)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TraceryPPPackage.TITLE__START_SYMBOL:
        return start_symbol != null;
      case TraceryPPPackage.TITLE__LIST:
        return list != null;
    }
    return super.eIsSet(featureID);
  }

} //TitleImpl
